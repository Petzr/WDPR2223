// <auto-generated />
using System;
using Laak.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace wdpr.Migrations
{
    [DbContext(typeof(TheaterContext))]
    [Migration("20221217195550_database SqlServer TheaterContext")]
    partial class databaseSqlServerTheaterContext
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Laak.Models.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Naam")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Wachtwoord")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("Laak.Models.Artiest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("BandId")
                        .HasColumnType("int");

                    b.Property<string>("Img")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Naam")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BandId");

                    b.ToTable("Artiest");
                });

            modelBuilder.Entity("Laak.Models.Band", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Img")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Naam")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Band");
                });

            modelBuilder.Entity("Laak.Models.Voorstelling", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ArtiestId")
                        .HasColumnType("int");

                    b.Property<int?>("BandId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Datum")
                        .HasColumnType("datetime2");

                    b.Property<string>("Genre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Img")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Naam")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Prijs")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Tijd")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ZaalId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ArtiestId");

                    b.HasIndex("BandId");

                    b.HasIndex("ZaalId");

                    b.ToTable("Voorstellingen");
                });

            modelBuilder.Entity("Laak.Models.Zaal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AantalDerderRang")
                        .HasColumnType("int");

                    b.Property<int?>("AantalEersteRang")
                        .HasColumnType("int");

                    b.Property<int?>("AantalTweedeRang")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Zaal");
                });

            modelBuilder.Entity("Laak.Models.Artiest", b =>
                {
                    b.HasOne("Laak.Models.Band", null)
                        .WithMany("Artiest")
                        .HasForeignKey("BandId");
                });

            modelBuilder.Entity("Laak.Models.Voorstelling", b =>
                {
                    b.HasOne("Laak.Models.Artiest", "Artiest")
                        .WithMany()
                        .HasForeignKey("ArtiestId");

                    b.HasOne("Laak.Models.Band", "Band")
                        .WithMany("Voorstellingen")
                        .HasForeignKey("BandId");

                    b.HasOne("Laak.Models.Zaal", "Zaal")
                        .WithMany()
                        .HasForeignKey("ZaalId");

                    b.Navigation("Artiest");

                    b.Navigation("Band");

                    b.Navigation("Zaal");
                });

            modelBuilder.Entity("Laak.Models.Band", b =>
                {
                    b.Navigation("Artiest");

                    b.Navigation("Voorstellingen");
                });
#pragma warning restore 612, 618
        }
    }
}
